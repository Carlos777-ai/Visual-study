<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2hEROR8KG4+FH//Z
</value>
  </data>
</root>